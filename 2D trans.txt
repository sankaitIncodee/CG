#ifdef _APPLE_
#include <GLUT/glut.h>
#else
#include <windows.h>
#include <GL/glut.h>
#endif

#include <math.h>

float scaleX = 1.0, scaleY = 1.0;
float angle = 0.0;
float pivotX = 0.0, pivotY = 0.0;
int reflectX = 1, reflectY = 1;

void drawObject() {
    glBegin(GL_TRIANGLES);
    glVertex2f(-0.2 * scaleX * reflectX + pivotX, -0.5 * scaleY * reflectY + pivotY);
    glVertex2f(0.2 * scaleX * reflectX + pivotX, -0.5 * scaleY * reflectY + pivotY);
    glVertex2f(0.0 * scaleX * reflectX + pivotX, 0.5 * scaleY * reflectY + pivotY);
    glEnd();
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    glLoadIdentity();
    glTranslatef(pivotX, pivotY, 0);
    glRotatef(angle, 0.0, 0.0, 1.0);
    glTranslatef(-pivotX, -pivotY, 0);
    drawObject();
    glFlush();
}

void keyboard(unsigned char key, int x, int y) {
    switch (key) {
    case 'S':
        scaleX *= 1.2;
        scaleY *= 1.2;
        break;
    case 's':
        scaleX *= 0.8;
        scaleY *= 0.8;
        break;
    case 'R': case 'r':
        pivotX = 0.2;
        pivotY = 0.2;
        angle += 30.0;
        break;
    case 'X': case 'x':
        reflectY *= -1;
        break;
    case 'Y': case 'y':
        reflectX *= -1;
        break;
    case 27:
        exit(0);
    }
    glutPostRedisplay();
}

void init() {
    glClearColor(0.0, 0.0, 0.0, 0.0);
    glColor3f(1.0, 1.0, 0.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-1, 1, -1, 1);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("2D Transformations - Scaling, Rotation, Reflection");
    init();
    glutDisplayFunc(display);
    glutKeyboardFunc(keyboard);
    glutMainLoop();
    return 0;
}