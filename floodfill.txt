#include <GL/glut.h>
#include <iostream>

int winWidth = 500, winHeight = 500;

void setPixel(int x, int y, float r, float g, float b) {
    glColor3f(r, g, b);
    glBegin(GL_POINTS);
    glVertex2i(x, y);
    glEnd();
    glFlush();
}

void getPixelColor(int x, int y, float* color) {
    glReadPixels(x, y, 1, 1, GL_RGB, GL_FLOAT, color);
}

void floodFill(int x, int y, float* fillColor, float* oldColor) {
    float color[3];
    getPixelColor(x, y, color);

    if (color[0] == oldColor[0] && color[1] == oldColor[1] && color[2] == oldColor[2]) {
        setPixel(x, y, fillColor[0], fillColor[1], fillColor[2]);
        floodFill(x + 1, y, fillColor, oldColor);
        floodFill(x - 1, y, fillColor, oldColor);
        floodFill(x, y + 1, fillColor, oldColor);
        floodFill(x, y - 1, fillColor, oldColor);
    }
}

void drawPolygon() {
    glColor3f(1, 0, 0); // Red boundary
    glBegin(GL_LINE_LOOP);
    glVertex2i(150, 150);
    glVertex2i(300, 150);
    glVertex2i(300, 300);
    glVertex2i(150, 300);
    glEnd();
    glFlush();
}

void mouse(int btn, int state, int x, int y) {
    y = winHeight - y;

    if (btn == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {
        float fillColor[] = { 0.0f, 1.0f, 0.0f }; // Green fill
        float oldColor[3];
        getPixelColor(x, y, oldColor);
        floodFill(x, y, fillColor, oldColor);
    }
}

void keyboard(unsigned char key, int x, int y) {
    if (key == 'c' || key == 'C') {
        glClear(GL_COLOR_BUFFER_BIT);
        drawPolygon();
    }
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    drawPolygon();
}

void init() {
    glClearColor(1, 1, 1, 1); // White background
    gluOrtho2D(0, winWidth, 0, winHeight);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(winWidth, winHeight);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Flood Fill Algorithm");
    init();
    glutMouseFunc(mouse);
    glutKeyboardFunc(keyboard);
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}