#include <GL/glut.h>
#include <cmath>

// Coordinates (renamed to avoid conflicts)
int x_start = 50, y_start = 50, x_end = 300, y_end = 200;

void bresenhamDashedLine(int x1, int y1, int x2, int y2) {
    int dx = abs(x2 - x1);
    int dy = abs(y2 - y1);
    int sx = (x2 > x1) ? 1 : -1;
    int sy = (y2 > y1) ? 1 : -1;
    int err = dx - dy;
    

    glBegin(GL_POINTS);
    while (true) {
       
            glVertex2i(x1, y1);

        if (x1 == x2 && y1 == y2) break;

        int e2 = 2 * err;
        if (e2 > -dy) { err -= dy; x1 += sx; }
        if (e2 < dx)  { err += dx; y1 += sy; }

        
    }
    glEnd();
    glFlush();
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1, 1, 1);  // White color
    bresenhamDashedLine(x_start, y_start, x_end, y_end);
}

void init() {
    glClearColor(0, 0, 0, 0);         // Background color = black
    gluOrtho2D(0, 500, 0, 500);       // Coordinate system
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutCreateWindow("Bresenham Dashed Line");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}