#include<GL/glut.h>
#include<math.h>

#include <algorithm>


int x_start=50, y_start=50, x_end=300, y_end=300;

void ddasimple(int x1, int y1, int x2, int y2)
{
    float dx=x2-x1;
    float dy=y2-y1;

    float steps= std::max(abs(dx),abs(dy));
    float x_inc=dx/steps;
    float y_inc=dy/steps;

    float x=x1;
    float y=y1;


    glBegin(GL_POINTS);
    for(int i=0;i<=steps;i++){

     glVertex2i(round(x),round(y));

    x+=x_inc;
    y+=y_inc;


    }
        glEnd();
        glFlush();
}

void display(){
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1,1,1);
    ddasimple(x_start, y_start, x_end, y_end);
}


void init(){
    glClearColor(0,0,0,0);
    gluOrtho2D(0,500,0,500);
}

int main(int argc, char**argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500,500);
    glutInitWindowPosition(100,100);
    glutCreateWindow("DDa simple line");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}